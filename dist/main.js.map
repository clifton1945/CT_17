{"version":3,"sources":["../main.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA;;AAEA,IAAI,IAAI,QAAQ,OAAR,CAAJ;AACJ,IAAI,MAAM,EAAE,GAAF;AACV,IAAI,UAAU,EAAE,OAAF;AACd,IAAI,QAAQ,EAAE,KAAF;;;;;;;AAOZ,IAAI,MAAM,kBAAN;AACJ,QAAQ,GAAR,CAAY,WAAW,GAAX,CAAZ;;AAEA,IAAI,WAAW,SAAS,gBAAT,CAA0B,aAA1B,CAAX;AACJ,IAAI,UAAU,SAAS,aAAT,CAAuB,MAAvB,CAAV;AACJ,IAAI,WAAW,EAAE,GAAF,CAAM,CAAN,EAAS,QAAT,CAAX;;AAEJ,IAAI,iBAAiB,QAAQ,iBAAR,EAA2B,cAA3B;AACrB,IAAI,sBAAsB,QAAQ,iBAAR,EAA2B,mBAA3B;;AAE1B,IAAI,aAAc,QACd,eAAe,UAAf,EAA2B,KAA3B,CADc,EAEd,eAAe,SAAf,EAA0B,IAA1B,CAFc,EAGd,oBAAoB,OAApB,CAHc,CAAd;AAIJ,IAAI,cAAc,WAAW,QAAX,CAAd;;AAEJ,QAAQ,GAAR,CAAY,YAAY,SAAZ,CAAZ;;AAEA,QAAQ,GAAR,CAAY,WAAW,GAAX,CAAZ","file":"main.js","sourcesContent":["/**\r\n * Broadly, a readEvent triggers everything.\r\n *      The event sets the var curRClss.beginNdx.\r\n *      which\r\n *      CAN (A) sliceChptsSpans:: N.curSiz -> N.curBeg -onto> NL.chptSpans -ret> LST.readDivLsts[L,L,L].\r\n *      then map set_ReadDiv::  -onto> ReadDivLsts -ret> ReadDiv\r\n *          (1) set ReadDiv.div:: S -ret> div,\r\n *          (2) set ReadDiv.spanCsdConstants: weight_lo/hi, are there other constants??\r\n *      Then map set_aSpanStyle::(elt, elt_ndx, elt_lst) -onto> ReadSpanLst -ret> Elt:mutated\r\n *\r\n *      OR (B) reset three ReadClass.Boundries.\r\n *      then map update_eachChptSpan onto each ChptSpan\r\n *          // ALERT MIXING functions w/ data below here.\r\n *          SET\r\n *          its readDiv.divName:: S:div -> S:\r\n *          its readDiv.CsdConstants:: S -> N.beg; S->N.end\r\n *          its readSpan.weight,\r\n *          format using eltNdx && eltNL and constants\r\n *          its CSD::              -> _set_readSpanCsd()\r\n *          its readDiv:: S->Div     -> _set_readDiv()\r\n *\r\n *          CSD in each span in each readClssDiv to be mutated.\r\n *          the function: mutateElt(elt, e_ndx, e_lst) will be mapped onto each Elt:span.\r\n *\r\n *  161129 ->  CAN SEE effect IN index.html of INVOKING mutateElt_parent() AND .mutateSpan_Csd() IN main().\r\n *  NEXT subsume both of these in a  new function: mutateElt(elt, e_ndx, e_lst)\r\n *  someDay I should see if I can wallaby test main.js by adding the loadFixtures. 16120955\r\n */\r\n\r\n\"use strict\";\r\n\r\nlet _ = require('ramda');\r\nlet map = _.map;\r\nlet compose = _.compose;\r\nlet curry = _.curry;\r\n// let P = require('ramda-fantasy');// new\r\n// let Identity = P.Identity;\r\n// let Maybe = P.Maybe;\r\n// let IO = P.IO.IO;\r\n// let runIO = P.IO.runIO;\r\n//*********************************************\r\nlet TRK = \"wbSample/main.js\";\r\nconsole.log(\"< IN >\" + TRK);\r\n\r\nlet chptSpns = document.querySelectorAll(\".chptr span\");\r\nlet stubDiv = document.querySelector(\".fut\");\r\nlet stubSpan = _.nth(1)(chptSpns);\r\n// functions\r\nlet mutateSpan_Csd = require('./src/mutateElt').mutateSpan_Csd;\r\nlet mutateSpan_rcParent = require('./src/mutateElt').mutateSpan_rcParent;\r\n\r\nlet MUTATE_ELT =  compose(\r\n    mutateSpan_Csd('fontSize', \"75%\"),\r\n    mutateSpan_Csd('opacity', \".4\"),\r\n    mutateSpan_rcParent(stubDiv));\r\nlet MUTATED_ELT = MUTATE_ELT(stubSpan);\r\n\r\nconsole.log(MUTATED_ELT.innerHTML);\r\n\r\nconsole.log('  OUT>' + TRK);\r\n"]}